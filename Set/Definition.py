'''
Set ເປັນໂຄງສ້າງຂໍ້ມູນແບບ non-primitive ມີລັກສະນະຄືກັນກັບ list ແລະ tuple
ຄືຈະເກັບຂໍ້ມູນແບບເປັນກຸ່ມ ເຊີ່ງຂໍ້ມູນຂ້າງໃນຈະເອີ້ນວ່າ ສະມາຊິກ ເຊີ່ງສາມາດຈັດກັບໄດ້ຫຼາຍໆ ປະເພດຂໍ້ມູນຮ່ວມກັນ
ແຕ່ຂໍ້ແຕກຕ່າງຈາກ list ກໍ່ຄືຂໍ້ມູນສະມາຊິກຈະບໍ່ສາມາດມີຄ່າຊ້ຳກັນ ແລະ ບໍ່ສາມາດແກ້ໄຂຂໍ້ມູນໄດ້ ເນື່ອງຈາກບໍ່ມີ index ໃນການອ້າງອິງ ແລະ ລຳດັບບໍ່ແນ່ນອນ
'''
# ການສ້າງ set ແມ່ນຈະໃຊ້ເຄື່ອງໝາຍ {} ໃນການກຳນົດຂອບເຂດ
number = {}                 # set ວ່າງເປົ່າ
number = {10,20,30,40}      # ເກັບສະເພາະ int
name = {"John", "Chiele", "Mike", "Kole", "Doley"}  # ເກັບສະເພາະ str
etc = {2,"Max",3.25,True,-20}   # ເກັບຫຼາຍໆ ຊະນິດຂໍ້ມູນນຳກັນ

# ໃນການກວດສອບສະນິດຂໍ້ມູນສາມາດໃຊ້ຄຳສັ່ງ type 
print(etc)
# ຜົນລັບກໍ່ຈະໄດ້ {1, 3.25, -20, 'Max'} ຈະເຫັນວ່າລຳດັບຂອງສະມາຊິກຈະບໍ່ລຽນຕາມລຳດັບທີ່ເຮົາສ້າງໄວ້ໃນ set

# ການສ້າງໂຕແປແບບ constructure ກໍ່ສາມາດເຮັດໄດ້ດັ່ງນີ້
numb = set((10,20,30,40))

# ໃນກໍລະນີ້ທີ່ສະມາຊິກຂອງ set ມີຄ່າຊ້ຳກັນມັນຈະສະແດງສະເພາະຄ່າທີ່ບໍ່ຊ້ຳກັນເທົ່ານັ້ນ
name = {"John","Chiele","Mike","Kole","Doley","Jame","John", "William","Smith","Jerry","John"}
# ຈາກການກຳນົດຈະເຫັນຈະມາຊິກຊ້ຳກັນ 3 ໂຕແຕ່ເມື່ອເຮົາໃຊ້ຄຳສັ່ງ print
print(name)
# ຜົນລັບຈະໄດ້ {'William', 'Smith', 'Jerry', 'Kole', 'Jame', 'Chiele', 'Doley', 'John', 'Mike'}

# set ບໍ່ສາມາດເຂົ້າເຖິງຕຳແໜ່ງຂອງສະມາຊິກດ້ວຍ index ໄດ້
print(number[2])
# ຜົນລັບກໍ່ຈະຂື້ນວ່າ TypeError: 'set' object is not subscriptable


# ເນື່ອງຈາກບໍ່ສາມາດເຂົ້າເຖິງຂໍ້ມູນດ້ວຍ index ສະນັ້ນໃນການແກ້ໄຂຂໍ້ມູນໃນ set ຈະບໍ່ສາມາດແກ້ໄຂໄດ້ຫຼັງຈາກທີ່ເຮົາສ້າງ set ມາແລ້ວ
number[0] = 50  # ປ່ຽນສະມາຊິກຂອງ number ຕຳແໜ່ງທຳອີດເປັນ 50
# ຜົນລັບກໍ່ຈະຂື້ນວ່າ TypeError: 'set' object does not support item assignment
